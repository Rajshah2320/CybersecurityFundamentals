import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.*;

import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;

import day1.AES;
import day1.AdditionCipher;
import day1.AffineCipher;
import day1.MultiplicationCipher;
import day2.DES;
import day2.MD5;

public class EncryptionAlgorithm {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		String plaintext = sc.nextLine();
		int key = sc.nextInt();
		int key2 = sc.nextInt();

		AdditionCipher addition = new AdditionCipher();

		String ciphertext = addition.encrypt(plaintext, key);
		System.out.println(ciphertext);
		System.out.println(addition.decrypt(ciphertext, key));

		MultiplicationCipher multiplication = new MultiplicationCipher();

		ciphertext = multiplication.encrypt(plaintext, key);
		System.out.println(ciphertext);
		System.out.println(multiplication.decrypt(ciphertext, key));

		AffineCipher affine = new AffineCipher();
		ciphertext = affine.encrypt(plaintext, key, key2);
		System.out.println(ciphertext);
		System.out.println(affine.decrypt(ciphertext, key, key2));

		// path of the file that we want to encrypt
		String textFile = "C:\\Users\\raj.shah\\eclipse-workspace\\EncryptionAlgorithms\\demo.txt";
		// path of the encrypted file that we get as output
		String encryptedData = "C:\\Users\\raj.shah\\eclipse-workspace\\EncryptionAlgorithms\\encrypted.txt";
		// path of the decrypted file that we get as output
		String decryptedData = "C:\\Users\\raj.shah\\eclipse-workspace\\EncryptionAlgorithms\\decrypted.txt";
		
		DES des=new DES();
		des.encrypt(textFile, encryptedData);
		des.decrypt(encryptedData, decryptedData);
		
		System.out.println("Your HashCode Generated by MD5 is: " + MD5.getMd5(plaintext));
		
		AES aes=new AES();
		try {
			aes.encrypt(textFile, encryptedData);
			aes.decrypt(encryptedData, decryptedData);
		} catch (InvalidKeyException | NoSuchPaddingException | NoSuchAlgorithmException
				| InvalidAlgorithmParameterException | BadPaddingException | IllegalBlockSizeException
				| IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	
		
		sc.close();

	}

}
